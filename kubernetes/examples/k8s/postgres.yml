apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app.kubernetes.io/name: postgres-service
    app.kubernetes.io/version: "13"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: simple-backend
    app.kubernetes.io/managed-by: helm
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
  labels:
    app.kubernetes.io/name: postgres-configmap
    app.kubernetes.io/version: "13"
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: simple
    app.kubernetes.io/managed-by: helm
data:
  10-create-user-and-dbs.sql: |
    CREATE USER program WITH PASSWORD 'test';
    CREATE DATABASE simple_backend;
    GRANT ALL PRIVILEGES ON DATABASE simple_backend TO program;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/version: "13"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: simple
    app.kubernetes.io/managed-by: helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        app.kubernetes.io/name: postgres
        app.kubernetes.io/version: "13"
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: simple
        app.kubernetes.io/managed-by: helm
    spec:
      containers:
        - name: postgres
          image: "postgres:13"
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: postgres
          resources:
            requests:
              memory: "128Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          ports:
            - name: postgres
              containerPort: 5432
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-config-map
              mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: db-data
        - name: postgres-config-map
          configMap:
            name: postgres-configmap